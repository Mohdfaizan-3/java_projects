<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xsi:schemaLocation="
        http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd">

    <!-- bean definitions here -->
<!--    <bean id="alien" class="org.example.Alien" scope="singleton"/>-->
    <bean id="alienNonMutable" class="org.example.Alien" scope="prototype" autowire="byType">
        <property name="age" value="1"/>
        <property name="salary" value="0"/>
<!--        <property name="com" ref="laptop"/>-->
<!--        <property name="lap" ref="laptop"/>-->

<!--        inner beam is used when we want inner bean to use by only its parent not other-->
        <property name="com">
            <bean name="desktop" class="org.example.Desktop" primary="true"/>
        </property>

<!--        <constructor-arg type="org.example.Laptop" ref="laptop"/>-->
<!--        <constructor-arg type="int" value="1"/>-->
<!--        <constructor-arg type="int" value="0"/>-->
        <constructor-arg index="0" value="1"/>
        <constructor-arg index="1" ref="laptop"/>
        <constructor-arg index="2" value="0"/>
    </bean>
    <bean id="laptop" class="org.example.Laptop" scope="prototype" primary="true"/>
    <bean id="desktop" class="org.example.Desktop" scope="prototype" lazy-init="true"/>
<!--    lazy init -> to stop loading the bean(singleton obj)  into the container when not using it-->

</beans>

<!--singleton -> object is mutable and obj is created when container loads,
 prototype -> new obj created everytime we say getBean() and obj is not created at container load-->